<?xml version="1.0" ?>
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="robot_name" default="thormang3" />
  <arg name="l_hand_type" default="$(optenv L_HAND_TYPE none)" />
  <arg name="r_hand_type" default="$(optenv R_HAND_TYPE none)" />
  <arg name="position_controller" default="true" />

  <arg name="world_name" default="$(find thor_mang_gazebo)/worlds/empty.world" />
  <arg name="pinned" default="false" />
  <arg name="ground_truth" default="true" />
  <arg name="paused" default="true" />
  <arg name="gazebo_gui" default="true" />
  
  <!-- needed to prevent gazebo plugins adding a namespace to frame_id-->
  <rosparam param="/$(arg robot_name)/tf_prefix"> "" </rosparam>
  <rosparam param="/$(arg robot_name)/sensor/tf_prefix"> "" </rosparam>
  
  <!-- start Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="physics" value="ode" />
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="True" />
    <arg name="gui" value="$(arg gazebo_gui)" />
    <arg name="headless" value="False" />
    <arg name="debug" value="False" />
  </include>

  <group ns="/gazebo/$(arg robot_name)">
    <!-- load Gazebo controllers -->
    <group ns="joints">
      <!-- HACK: Load the URDF into the ROS Parameter Server at gazebo controller namespace due to a bug in controller spawner -->
      <include file="$(find thormang3_description)/launch/load_robot_description.launch">
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="l_hand_type" value="$(arg l_hand_type)" />
        <arg name="r_hand_type" value="$(arg r_hand_type)" />
        <arg name="pinned" value="$(arg pinned)" />
      </include>

      <!-- Gazebo ros controllers -->
      <group if="$(arg position_controller)" >
        <include file="$(find thor_mang_gazebo)/launch/position_controller.launch" />

        <!-- load ros controllers for vt hands if attached -->
        <include file="$(find thor_vt_hand_gazebo)/launch/left_hand_position_controllers.launch" if="$(eval arg('l_hand_type') == 'vt_hand')">
          <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <include file="$(find thor_vt_hand_gazebo)/launch/right_hand_position_controllers.launch" if="$(eval arg('r_hand_type') == 'vt_hand')">
          <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <!-- load ros controllers for RH_P12_RN grippers if attached -->
        <include file="$(find rh_p12_rn_gazebo)/launch/left_hand_position_controllers.launch" if="$(eval arg('l_hand_type') == 'rh_p12_rn')">
          <arg name="robot_name" value="$(arg robot_name)" />
        </include>
        <node name="l_rh_p12_rn_mimic_gazebo_pub" pkg="rh_p12_rn_gazebo" type="gazebo_rh_joint_mimic_pub" if="$(eval arg('l_hand_type') == 'rh_p12_rn')">
          <param name="prefix" type="string" value="l_" />
        </node>

        <include file="$(find rh_p12_rn_gazebo)/launch/right_hand_position_controllers.launch" if="$(eval arg('r_hand_type') == 'rh_p12_rn')">
          <arg name="robot_name" value="$(arg robot_name)" />
        </include>
        <node name="r_rh_p12_rn_mimic_gazebo_pub" pkg="rh_p12_rn_gazebo" type="gazebo_rh_joint_mimic_pub" if="$(eval arg('r_hand_type') == 'rh_p12_rn')">
          <param name="prefix" type="string" value="r_" />
        </node>
      </group>

      <!-- load ros controllers for multisensor head -->
      <include file="$(find thor_mang_gazebo)/launch/hector_multisensor_head_controller.launch">
        <arg name="robot_name" value="$(arg robot_name)" />
      </include>
    </group>
    <!-- run topic relays for topics published by gazebo to simulate real sensors -->
    <node name="imu_raw_relay" pkg="topic_tools" type="relay" args="/gazebo/$(arg robot_name)/sensor/imu /$(arg robot_name)/sensor/imu/raw" />
    <node name="imu_filtered_relay" pkg="topic_tools" type="relay" args="/gazebo/$(arg robot_name)/sensor/imu /$(arg robot_name)/sensor/imu/filtered" />

    <!-- start static TF publisher for the RealSense camera -->
    <include file="$(find thor_mang_gazebo)/launch/start_realsense_tf_publisher.launch" />

    <!-- transform ground truth pose to tf -->
    <group if="$(arg ground_truth)" >
      <node name="pelvis_odom_to_tf" pkg="message_to_tf" type="message_to_tf">
        <param name="odometry_topic" type="string" value="/gazebo/$(arg robot_name)/pelvis_odom" />
        <param name="child_frame_id" type="string" value="pelvis_link" />
        <param name="frame_id" type="string" value="odom" />
      </node>

      <node pkg="tf" type="static_transform_publisher" name="world_odom_tf_static_publisher" args="0 0 0 0 0 0 1 world odom 100" />
    </group>

    <!-- misc -->
    <node pkg="tf" type="static_transform_publisher" name="lidar_to_head" args=" 0 0 0 0 0 0 head_link_hokuyo_laser_frame johnny5/sensor/head_link_hokuyo_laser_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="cam_to_head" args=" 0 0 0 0 0 0 head_cam_depth_optical_frame johnny5/sensor/head_cam/head_cam_depth_optical_frame 100" />
  </group>

  <group ns="$(arg robot_name)">
    <!-- robot spawner -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model $(arg robot_name) -z 0.9 -param robot_description" />
  </group>
</launch>
